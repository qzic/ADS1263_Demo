package ca.qzic.ads1263test_py;

import ca.qzic.ads1263test_py.ADS1263.Drate;
import ca.qzic.ads1263test_py.network.Networks.AppMsgHandler;
import static ca.qzic.ads1263test_py.network.Common.AppCommon.*;
import java.util.prefs.*;
import javax.swing.*;
import java.awt.*;
import static java.lang.System.out;
import org.slf4j.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt
 * to change this license Click
 * nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this
 * template
 */
/**
 *
 * @author Quentin
 */
public class Main extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private static org.slf4j.Logger logger = LoggerFactory.getLogger(Main.class);
    public static volatile boolean die = false, stop = false;
    public static Preferences prefs;
    public static Main netHost;
    static AppMsgHandler myMsgHandler;

    /**
     * Creates new form AppFrame
     */
    public Main() {
        initComponents();
        setLocation(800, 300);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hello World");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        prefs = Preferences.userNodeForPackage(Main.class);

        logger.info("********************************************************");
        logger.info("**************** RPi Net Host 1.0 **********************");
        logger.info("********************************************************");

        //------------------------------------------------------------------------------------------
        // Start Blue Tooth Server and message handler
        myMsgHandler = new AppMsgHandler(uuidString);

        //==========================================================
        ADS1263 adc = new ADS1263();
        adc.initADC1(Drate.SPS14400);
        int val = adc.getChannel(0);
        System.out.println("ADC1 Channel 0: " + val);

//        DiozeroHardwareInterface hw = new DiozeroHardwareInterface();
        RaspberryPiConfig hw = new RaspberryPiConfig();
        if (hw.moduleInit() == 0) {
            hw.digitalWrite(17, true);     // Example GPIO pin
            boolean state = hw.digitalRead(27);
            hw.spiWriteBytes(new byte[]{0x01, 0x02});
            byte[] response = hw.spiReadBytes(4);
            hw.delayMs(100);
            for(int i=0; i< 4; i++) {
                out.println(response[i]);
            }
            hw.moduleExit();
        }

//        adc.exit();
        //==========================================================

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                netHost = new Main();
                netHost.setLocationByPlatform(true);
                netHost.setVisible(true);
            }
        });
    }

    public void MessageRecived(String s) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
